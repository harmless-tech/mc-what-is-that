name: Publish
on:
  push:
    tags:
      - "fabric-v**"

permissions:
  contents: write
  packages: write

jobs:
  release-info:
    outputs:
      tag: ${{ github.ref_name }}
      name: ${{ github.ref_name }}
      prerelease: ${{ steps.regex-tag.outputs.match == '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: KyoriPowered/action-regex-match@v4
        id: regex-tag
        with:
          text: ${{ github.ref }}
          regex: '^refs\/tags\/fabric-v\d+\.\d+\.\d+$'

  build-test:
    strategy:
      matrix:
        java: [
          17,    # Java LTS & minimum supported by Minecraft
          21,    # Current Java LTS
          22,    # Current Java
        ]
        os: [ubuntu-latest, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Setup JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build
        run: ./gradlew build --info
      - name: Artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '21' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  build-release:
    runs-on: ubuntu-latest
    needs: [release-info, build-test]
    steps:
      - uses: actions/checkout@v4
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v2
      - name: Setup JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: 22   # Latest Java
          distribution: temurin
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Clean, Build, Publish
        run: ./gradlew clean build publish --info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Modrinth
        if: ${{ ! contains(github.ref, '-dev') }}
        run: echo "NULL"    # TODO: https://github.com/modrinth/minotaur
      - name: Create and push artifacts to release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.release-info.outputs.tag }}
          name: ${{ needs.release-info.outputs.name }}
          allowUpdates: true
          prerelease: ${{ needs.release.outputs.prerelease }}
          artifacts: "build/libs/*"
          body: ""
